<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
        xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-4.1.xsd">

    <!--注解生效配置-->
    <!--自动扫描部件(这里扫描所有相关的注解，注意在改包名的时候把这里也改了！！)-->
    <context:annotation-config/>
    <mvc:annotation-driven/>

    <context:component-scan base-package="actPlus"/>

    <!--静态资源配置-->
    <mvc:resources mapping="/img/img/**" location="/static/img/img/" />
    <mvc:resources mapping="/img/home/**" location="/static/img/home/" />
    <mvc:resources mapping="/img/icon/**" location="/static/img/icon/" />
    <mvc:resources mapping="/images/**" location="/static/images/" />
    <mvc:resources mapping="/css/**" location="/static/css/" />
    <mvc:resources mapping="/js/**" location="/static/js/" />
    <mvc:resources mapping="/fonts/**" location="/static/fonts/" />
    <mvc:resources mapping="/favicon.ico" location="/static/favicon.ico" />

    <!--不经过controller的链接-->
    <!--用于支持cxf的请求-->
    <!--<mvc:view-controller path="/api/*" />-->

    <!-- SpringResourceTemplateResolver automatically integrates with Spring's own -->
    <!-- resource resolution infrastructure, which is highly recommended.          -->
    <bean id="templateResolver"
          class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/" />
        <property name="suffix" value=".html" />
        <!-- HTML is the default value, added here for the sake of clarity.          -->
        <property name="templateMode" value="HTML" />
        <!-- Template cache is true by default. Set to false if you want             -->
        <!-- templates to be automatically updated when modified.                    -->

        <!--缓存-->
        <!--<property name="cacheable" value="true" />-->


        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <!-- SpringTemplateEngine automatically applies SpringStandardDialect and      -->
    <!-- enables Spring's own MessageSource message resolution mechanisms.         -->
    <bean id="templateEngine"
          class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
        <property name="enableSpringELCompiler" value="true" />
    </bean>

    <bean id="viewResolver" class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding" value="UTF-8"/>
    </bean>


    <!--文件上传模块-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--最大上传文件大小为２m-->
        <property name="maxUploadSize"><value>2097152</value></property>
        <property name="defaultEncoding"><value>UTF-8</value></property>
    </bean>


    <!--shiro注解支持-->
    <aop:config proxy-target-class="true"></aop:config>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- 控制器异常处理 -->
    <bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
    </bean>
    <bean class="actPlus.web.exceptionHandlers.BasedExceptionHandler"/>


    <!--schedule调度注解支持-->
    <!--没有该注解 @Scheduled会失效-->
    <task:annotation-driven scheduler="myScheduler"/>
    <!--配置调度的线程池大小-->
    <task:scheduler id="myScheduler" pool-size="1"/>


</beans>


